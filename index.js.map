{"version":3,"file":"index.js","sources":["src/components/ActionDataContext.tsx","src/components/Form.tsx"],"sourcesContent":["import { AppInitialProps } from 'next/app'\nimport { AppContextType } from 'next/dist/shared/lib/utils'\nimport React, { Dispatch } from 'react'\nimport { JSONSerializable } from '../utils/types'\n\ntype PageProps = AppInitialProps['pageProps']\n\nconst ActionDataContext = React.createContext<\n  [JSONSerializable, Dispatch<JSONSerializable>]\n>([{}, () => {}])\n\ntype ActionDataContextProviderProps = {\n  pageProps: PageProps\n} & (\n  | {\n      children: (props: PageProps) => React.ReactElement\n      Component?: AppContextType['Component']\n    }\n  | {\n      children?: (props: AppInitialProps['pageProps']) => React.ReactElement\n      Component: AppContextType['Component']\n    }\n)\ntype ActionDataContextProvider = (\n  props: ActionDataContextProviderProps\n) => React.ReactElement\n\nexport const ActionDataContextProvider: ActionDataContextProvider = ({\n  Component,\n  children: childrenProp,\n  pageProps: { __ACTION_DATA__, ...pageProps },\n}) => {\n  const [value, setValue] = React.useState<JSONSerializable>(\n    __ACTION_DATA__ ?? {}\n  )\n  const children = Component\n    ? (props: PageProps) => <Component {...props} />\n    : childrenProp\n\n  return (\n    <ActionDataContext.Provider value={[value, setValue]}>\n      {children?.(pageProps)}\n    </ActionDataContext.Provider>\n  )\n}\n\nexport const _useActionDataSetter = () => React.useContext(ActionDataContext)\n\nexport const useActionData = () =>\n  React.useContext(ActionDataContext)?.[0] ?? {}\n","import { useRouter } from 'next/router'\nimport React from 'react'\nimport { _useActionDataSetter } from './ActionDataContext'\n\ntype FormProps = {\n  action?: string\n  children?: React.ReactNode\n  method?: string\n  onError?: (response: Response) => void\n} & React.FormHTMLAttributes<HTMLFormElement>\n\ntype Form = (props: FormProps) => React.ReactElement\n\nexport const Form: Form = ({\n  action,\n  children,\n  method: methodProp = 'POST',\n  onError,\n  ...props\n}) => {\n  const router = useRouter()\n  const [, setActionData] = _useActionDataSetter()\n  const method = methodProp.toUpperCase()\n\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const actionUrl = action ?? document.location.pathname\n    const response = await fetch(\n      new Request(actionUrl, {\n        body: new FormData(event.target as HTMLFormElement),\n        headers: { 'x-fetch': 'true' },\n        method,\n      })\n    )\n\n    if ([307, 308].includes(response.status)) {\n      router.push((await response.json()).__REDIRECT_LOCATION__)\n      return\n    }\n\n    if (response.ok) {\n      setActionData((await response.json()).__ACTION_DATA__)\n      return\n    }\n\n    if (onError) {\n      onError(response)\n    } else {\n      throw new Error(response.statusText)\n    }\n  }\n\n  return (\n    <form\n      method={method}\n      onSubmit={onSubmit}\n      encType=\"multipart/form-data\"\n      {...props}\n    >\n      {children}\n    </form>\n  )\n}\n"],"names":["React","router","useRouter"],"mappings":";;;;;;;;;;;AAOA,MAAM,oBAAoBA,0BAAM,cAE9B,CAAC,IAAI,MAAM;AAAA;MAkBA,4BAAuD,CAAC;AAAA,EACnE;AAAA,EACA,UAAU;AAAA,EACV,WAAW,EAAE,oBAAoB;AAAA,MAC7B;AACJ,QAAM,CAAC,OAAO,YAAYA,0BAAM,SAC9B,mBAAmB;AAErB,QAAM,WAAW,YACb,CAAC,kEAAsB,WAAD;AAAA,OAAe;AAAA,OACrC;AAEJ,iEACG,kBAAkB,UAAnB;AAAA,IAA4B,OAAO,CAAC,OAAO;AAAA,KACxC,WAAW;AAAA;MAKL,uBAAuB,MAAMA,0BAAM,WAAW;MAE9C,gBAAgB,MAC3BA,0BAAM,WAAW,qBAAqB,MAAM;;MCpCjC,OAAa,CAAC;AAAA,EACzB;AAAA,EACA;AAAA,EACA,QAAQ,aAAa;AAAA,EACrB;AAAA,KACG;AAAA,MACC;AACJ,QAAMC,WAASC;AACf,QAAM,GAAG,iBAAiB;AAC1B,QAAM,SAAS,WAAW;AAE1B,QAAM,WAAW,OAAO,UAA4C;AAClE,UAAM;AACN,UAAM,YAAY,UAAU,SAAS,SAAS;AAC9C,UAAM,WAAW,MAAM,MACrB,IAAI,QAAQ,WAAW;AAAA,MACrB,MAAM,IAAI,SAAS,MAAM;AAAA,MACzB,SAAS,EAAE,WAAW;AAAA,MACtB;AAAA;AAIJ,QAAI,CAAC,KAAK,KAAK,SAAS,SAAS,SAAS;AACxC,eAAO,KAAM,OAAM,SAAS,QAAQ;AACpC;AAAA;AAGF,QAAI,SAAS,IAAI;AACf,oBAAe,OAAM,SAAS,QAAQ;AACtC;AAAA;AAGF,QAAI,SAAS;AACX,cAAQ;AAAA,WACH;AACL,YAAM,IAAI,MAAM,SAAS;AAAA;AAAA;AAI7B,iEACG,QAAD;AAAA,IACE;AAAA,IACA;AAAA,IACA,SAAQ;AAAA,OACJ;AAAA,KAEH;AAAA;;;;;;"}